// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow to generate a presentation outline based on the clarified content from the chat.
 *
 * - generatePresentationOutline - A function that handles the generation of the presentation outline.
 * - GeneratePresentationOutlineInput - The input type for the generatePresentationOutline function.
 * - GeneratePresentationOutlineOutput - The return type for the generatePresentationOutline function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePresentationOutlineInputSchema = z.object({
  clarifiedContent: z
    .string()
    .describe('The clarified content from the chat, providing context for the presentation outline.'),
});
export type GeneratePresentationOutlineInput = z.infer<typeof GeneratePresentationOutlineInputSchema>;

const GeneratePresentationOutlineOutputSchema = z.object({
  slideTitles: z
    .array(z.string())
    .describe('An array of slide titles representing the presentation outline.'),
});
export type GeneratePresentationOutlineOutput = z.infer<typeof GeneratePresentationOutlineOutputSchema>;

export async function generatePresentationOutline(
  input: GeneratePresentationOutlineInput
): Promise<GeneratePresentationOutlineOutput> {
  return generatePresentationOutlineFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generatePresentationOutlinePrompt',
  input: {schema: GeneratePresentationOutlineInputSchema},
  output: {schema: GeneratePresentationOutlineOutputSchema},
  prompt: `You are an expert presentation designer.

  Based on the clarified content provided, generate a logical and coherent slide outline for a presentation.
  The outline should consist of an array of slide titles that cover the key points and flow logically.

  Clarified Content: {{{clarifiedContent}}}

  Return a JSON array of strings, where each string is a slide title.
  `, 
});

const generatePresentationOutlineFlow = ai.defineFlow(
  {
    name: 'generatePresentationOutlineFlow',
    inputSchema: GeneratePresentationOutlineInputSchema,
    outputSchema: GeneratePresentationOutlineOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
